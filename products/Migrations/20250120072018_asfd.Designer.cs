// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using products.data;

#nullable disable

namespace products.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250120072018_asfd")]
    partial class asfd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("products.models.customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("shopingcartid")
                        .HasColumnType("int");

                    b.Property<int?>("stityockqwant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("products.models.order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customerid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("customerid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("products.models.product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("orderid")
                        .HasColumnType("int");

                    b.Property<int?>("totalprice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("orderid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("products.models.shpoingcart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("customerid")
                        .HasColumnType("int");

                    b.Property<int?>("nemberofproducts")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customerid")
                        .IsUnique()
                        .HasFilter("[customerid] IS NOT NULL");

                    b.ToTable("shpoingcarts");
                });

            modelBuilder.Entity("products.models.order", b =>
                {
                    b.HasOne("products.models.customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("products.models.product", b =>
                {
                    b.HasOne("products.models.order", "order")
                        .WithMany("products")
                        .HasForeignKey("orderid");

                    b.Navigation("order");
                });

            modelBuilder.Entity("products.models.shpoingcart", b =>
                {
                    b.HasOne("products.models.customer", "customer")
                        .WithOne("shpoingcart")
                        .HasForeignKey("products.models.shpoingcart", "customerid");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("products.models.customer", b =>
                {
                    b.Navigation("orders");

                    b.Navigation("shpoingcart");
                });

            modelBuilder.Entity("products.models.order", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
